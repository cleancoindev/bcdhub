definitions:
  ast.JSONModel:
    additionalProperties: true
    type: object
  ast.JSONSchema:
    properties:
      const:
        type: string
      default:
        type: object
      format:
        type: string
      items:
        $ref: '#/definitions/ast.SchemaKey'
      maxLength:
        type: integer
      minLength:
        type: integer
      oneOf:
        items:
          $ref: '#/definitions/ast.JSONSchema'
        type: array
      prim:
        type: string
      properties:
        additionalProperties:
          $ref: '#/definitions/ast.JSONSchema'
        type: object
      required:
        items:
          type: string
        type: array
      schemaKey:
        $ref: '#/definitions/ast.SchemaKey'
      tag:
        type: string
      title:
        type: string
      type:
        type: string
      x-itemTitle:
        type: string
    type: object
  ast.MiguelNode:
    properties:
      children:
        items:
          $ref: '#/definitions/ast.MiguelNode'
        type: array
      diff_type:
        type: string
      from:
        type: object
      name:
        type: string
      prim:
        type: string
      type:
        type: string
      value:
        type: object
    type: object
  ast.SchemaKey:
    type: object
  ast.Typedef:
    properties:
      args:
        items:
          $ref: '#/definitions/ast.TypedefArg'
        type: array
      name:
        type: string
      type:
        type: string
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
    type: object
  ast.TypedefArg:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  formatter.DiffResult:
    properties:
      added:
        type: integer
      changed:
        type: integer
      left:
        items:
          items:
            $ref: '#/definitions/formatter.Item'
          type: array
        type: array
      removed:
        type: integer
      right:
        items:
          items:
            $ref: '#/definitions/formatter.Item'
          type: array
        type: array
    type: object
  formatter.Item:
    properties:
      chunk:
        type: string
      type:
        type: integer
    type: object
  gin.H:
    additionalProperties: true
    type: object
  handlers.AccountInfo:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      balance:
        type: integer
      last_action:
        type: string
      network:
        type: string
      tokens:
        items:
          $ref: '#/definitions/handlers.TokenBalance'
        type: array
      tx_count:
        type: integer
    type: object
  handlers.Alias:
    properties:
      address:
        example: KT1CeekjGVRc5ASmgWDc658NBExetoKNuiqz
        type: string
      alias:
        example: Contract alias
        type: string
      network:
        example: babylonnet
        type: string
      slug:
        example: contract_slug
        type: string
    type: object
  handlers.BigMapDiffByKeyResponse:
    properties:
      key:
        type: object
        x-nullable: true
      key_hash:
        type: string
      total:
        type: integer
      values:
        items:
          $ref: '#/definitions/handlers.BigMapDiffItem'
        type: array
        x-nullable: true
    type: object
  handlers.BigMapDiffItem:
    properties:
      level:
        type: integer
      timestamp:
        type: string
      value:
        type: object
    type: object
  handlers.BigMapHistoryItem:
    properties:
      action:
        type: string
      destination_ptr:
        type: integer
        x-nullable: true
      source_ptr:
        type: integer
        x-nullable: true
      timestamp:
        type: string
    type: object
  handlers.BigMapHistoryResponse:
    properties:
      address:
        type: string
      items:
        items:
          $ref: '#/definitions/handlers.BigMapHistoryItem'
        type: array
        x-nullable: true
      network:
        type: string
      ptr:
        type: integer
    type: object
  handlers.BigMapItem:
    properties:
      key:
        type: object
      key_hash:
        type: string
      key_string:
        type: string
      level:
        type: integer
      timestamp:
        type: string
      value:
        type: object
    type: object
  handlers.BigMapResponseItem:
    properties:
      count:
        type: integer
      data:
        $ref: '#/definitions/handlers.BigMapItem'
    type: object
  handlers.Block:
    properties:
      chain_id:
        example: NetXdQprcVkpaWU
        type: string
      hash:
        example: BLyAEwaXShJuZasvUezHUfLqzZ48V8XrPvXF2wRaH15tmzEpsHT
        type: string
      level:
        example: 24
        type: integer
      network:
        example: mainnet
        type: string
      predecessor:
        example: BMWVEwEYw9m5iaHzqxDfkPzZTV4rhkSouRh3DkVMVGkxZ3EVaNs
        type: string
      protocol:
        example: PtCJ7pwoxe8JasnHY8YonnLYjcVHmhiARPJvqcC6VfHT5s8k8sY
        type: string
      timestamp:
        example: "2018-06-30T18:05:27Z"
        type: string
    type: object
  handlers.CodeDiffLeg:
    properties:
      address:
        type: string
      level:
        type: integer
      network:
        type: string
      protocol:
        type: string
    required:
    - address
    - network
    type: object
  handlers.CodeDiffRequest:
    properties:
      left:
        $ref: '#/definitions/handlers.CodeDiffLeg'
      right:
        $ref: '#/definitions/handlers.CodeDiffLeg'
    required:
    - left
    - right
    type: object
  handlers.CodeDiffResponse:
    properties:
      diff:
        $ref: '#/definitions/formatter.DiffResult'
      left:
        $ref: '#/definitions/handlers.CodeDiffLeg'
      right:
        $ref: '#/definitions/handlers.CodeDiffLeg'
    type: object
  handlers.Contract:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      annotations:
        items:
          type: string
        type: array
        x-nullable: true
      delegate:
        type: string
        x-nullable: true
      delegate_alias:
        type: string
        x-nullable: true
      entrypoints:
        items:
          type: string
        type: array
        x-nullable: true
      fail_strings:
        items:
          type: string
        type: array
        x-nullable: true
      found_by:
        type: string
        x-nullable: true
      hardcoded:
        items:
          type: string
        type: array
        x-nullable: true
      hash:
        type: string
      id:
        type: string
      language:
        type: string
        x-nullable: true
      last_action:
        type: string
        x-nullable: true
      level:
        type: integer
      manager:
        type: string
        x-nullable: true
      migrations_count:
        type: integer
        x-nullable: true
      network:
        type: string
      project_id:
        type: string
        x-nullable: true
      slug:
        type: string
        x-nullable: true
      subscription:
        $ref: '#/definitions/handlers.Subscription'
        x-nullable: true
      tags:
        items:
          type: string
        type: array
        x-nullable: true
      timestamp:
        type: string
      tokens:
        items:
          $ref: '#/definitions/handlers.TokenBalance'
        type: array
      total_subscribed:
        type: integer
      tx_count:
        type: integer
        x-nullable: true
      verification_source:
        type: string
        x-nullable: true
      verified:
        type: boolean
        x-nullable: true
    type: object
  handlers.CountResponse:
    properties:
      count:
        type: integer
    type: object
  handlers.DomainsResponse:
    properties:
      domains:
        items:
          $ref: '#/definitions/tezosdomain.TezosDomain'
        type: array
      total:
        type: integer
    type: object
  handlers.EntrypointSchema:
    properties:
      default_model:
        $ref: '#/definitions/ast.JSONModel'
        x-nullable: true
      name:
        type: string
      schema:
        $ref: '#/definitions/ast.JSONSchema'
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
    type: object
  handlers.Error:
    properties:
      message:
        example: text
        type: string
    type: object
  handlers.GetBigMapResponse:
    properties:
      active_keys:
        type: integer
      address:
        type: string
      contract_alias:
        type: string
        x-nullable: true
      network:
        type: string
      ptr:
        type: integer
      total_keys:
        type: integer
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
        x-nullable: true
    type: object
  handlers.GetErrorLocationResponse:
    properties:
      end_col:
        type: integer
      failed_row:
        type: integer
      first_row:
        type: integer
      start_col:
        type: integer
      text:
        type: string
    type: object
  handlers.Migration:
    properties:
      hash:
        type: string
        x-nullable: true
      kind:
        type: string
      level:
        type: integer
      prev_protocol:
        type: string
      protocol:
        type: string
      timestamp:
        type: string
    type: object
  handlers.NetworkStats:
    properties:
      contracts_count:
        example: 10
        type: integer
      languages:
        additionalProperties:
          type: integer
        type: object
      operations_count:
        example: 100
        type: integer
      protocols:
        items:
          $ref: '#/definitions/handlers.Protocol'
        type: array
    type: object
  handlers.Operation:
    properties:
      allocated_destination_contract_burned:
        type: integer
        x-nullable: true
      amount:
        type: integer
        x-nullable: true
      balance:
        type: integer
        x-nullable: true
      burned:
        type: integer
        x-nullable: true
      content_index:
        type: integer
      counter:
        type: integer
        x-nullable: true
      delegate:
        type: string
        x-nullable: true
      destination:
        type: string
        x-nullable: true
      destination_alias:
        type: string
        x-nullable: true
      entrypoint:
        type: string
        x-nullable: true
      errors:
        items:
          $ref: '#/definitions/tezerrors.Error'
        type: array
        x-nullable: true
      fee:
        type: integer
        x-nullable: true
      gas_limit:
        type: integer
        x-nullable: true
      hash:
        type: string
        x-nullable: true
      id:
        type: string
        x-nullable: true
      internal:
        type: boolean
      kind:
        type: string
      level:
        type: integer
        x-nullable: true
      manager_pubkey:
        type: string
        x-nullable: true
      mempool:
        type: boolean
      network:
        type: string
      parameters:
        type: object
        x-nullable: true
      protocol:
        type: string
      public_key:
        type: string
        x-nullable: true
      rawMempool:
        type: object
        x-nullable: true
      result:
        $ref: '#/definitions/handlers.OperationResult'
        x-nullable: true
      source:
        type: string
        x-nullable: true
      source_alias:
        type: string
        x-nullable: true
      status:
        type: string
      storage_diff:
        type: object
        x-nullable: true
      storage_limit:
        type: integer
        x-nullable: true
      timestamp:
        type: string
    type: object
  handlers.OperationResponse:
    properties:
      last_id:
        example: "1588640276994159"
        type: string
        x-nullable: true
      operations:
        items:
          $ref: '#/definitions/handlers.Operation'
        type: array
    type: object
  handlers.OperationResult:
    properties:
      allocated_destination_contract:
        example: true
        type: boolean
        x-nullable: true
      consumed_gas:
        example: 100
        type: integer
        x-nullable: true
      paid_storage_size_diff:
        example: 300
        type: integer
        x-nullable: true
      storage_size:
        example: 200
        type: integer
        x-nullable: true
    type: object
  handlers.PageableTokenContracts:
    properties:
      tokens:
        items:
          $ref: '#/definitions/handlers.TokenContract'
        type: array
      total:
        type: integer
    type: object
  handlers.Protocol:
    properties:
      alias:
        example: Carthage
        type: string
      end_level:
        example: 0
        type: integer
      hash:
        example: PsCARTHAGazKbHtnKfLzQg3kms52kSRpgnDY982a9oYsSXRLQEb
        type: string
      network:
        example: mainnet
        type: string
      start_level:
        example: 851969
        type: integer
    type: object
  handlers.SameContractsResponse:
    properties:
      contracts:
        items:
          $ref: '#/definitions/handlers.Contract'
        type: array
      count:
        type: integer
    type: object
  handlers.SimilarContract:
    properties:
      added:
        type: integer
        x-nullable: true
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      annotations:
        items:
          type: string
        type: array
        x-nullable: true
      count:
        type: integer
      delegate:
        type: string
        x-nullable: true
      delegate_alias:
        type: string
        x-nullable: true
      entrypoints:
        items:
          type: string
        type: array
        x-nullable: true
      fail_strings:
        items:
          type: string
        type: array
        x-nullable: true
      found_by:
        type: string
        x-nullable: true
      hardcoded:
        items:
          type: string
        type: array
        x-nullable: true
      hash:
        type: string
      id:
        type: string
      language:
        type: string
        x-nullable: true
      last_action:
        type: string
        x-nullable: true
      level:
        type: integer
      manager:
        type: string
        x-nullable: true
      migrations_count:
        type: integer
        x-nullable: true
      network:
        type: string
      project_id:
        type: string
        x-nullable: true
      removed:
        type: integer
        x-nullable: true
      slug:
        type: string
        x-nullable: true
      subscription:
        $ref: '#/definitions/handlers.Subscription'
        x-nullable: true
      tags:
        items:
          type: string
        type: array
        x-nullable: true
      timestamp:
        type: string
      tokens:
        items:
          $ref: '#/definitions/handlers.TokenBalance'
        type: array
      total_subscribed:
        type: integer
      tx_count:
        type: integer
        x-nullable: true
      verification_source:
        type: string
        x-nullable: true
      verified:
        type: boolean
        x-nullable: true
    type: object
  handlers.SimilarContractsResponse:
    properties:
      contracts:
        items:
          $ref: '#/definitions/handlers.SimilarContract'
        type: array
      count:
        type: integer
    type: object
  handlers.Subscription:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      network:
        type: string
      sentry_dsn:
        type: string
        x-nullable: true
      sentry_enabled:
        type: boolean
      subscribed_at:
        type: string
      watch_calls:
        type: boolean
      watch_deployments:
        type: boolean
      watch_errors:
        type: boolean
      watch_mempool:
        type: boolean
      watch_migrations:
        type: boolean
      watch_same:
        type: boolean
      watch_similar:
        type: boolean
    type: object
  handlers.TZIPResponse:
    properties:
      address:
        type: string
      authors:
        items:
          type: string
        type: array
      description:
        type: string
      domain:
        $ref: '#/definitions/tezosdomain.ReverseTezosDomain'
      events:
        items:
          $ref: '#/definitions/tzip.Event'
        type: array
      extras:
        additionalProperties: true
        type: object
      homepage:
        type: string
      interfaces:
        items:
          type: string
        type: array
      license:
        $ref: '#/definitions/tzip.License'
      name:
        type: string
      network:
        type: string
      version:
        type: string
      views:
        items:
          $ref: '#/definitions/tzip.View'
        type: array
    type: object
  handlers.Token:
    properties:
      contract:
        type: string
      decimals:
        type: integer
        x-nullable: true
      level:
        type: integer
        x-nullable: true
      name:
        type: string
        x-nullable: true
      network:
        type: string
      supply:
        type: number
      symbol:
        type: string
        x-nullable: true
      token_id:
        type: integer
      token_info:
        additionalProperties: true
        type: object
        x-nullable: true
      transfered:
        type: number
      volume_24_hours:
        type: number
        x-nullable: true
    type: object
  handlers.TokenBalance:
    properties:
      balance:
        type: string
      contract:
        type: string
      decimals:
        type: integer
        x-nullable: true
      level:
        type: integer
        x-nullable: true
      name:
        type: string
        x-nullable: true
      network:
        type: string
      symbol:
        type: string
        x-nullable: true
      token_id:
        type: integer
      token_info:
        additionalProperties: true
        type: object
        x-nullable: true
      volume_24_hours:
        type: number
        x-nullable: true
    type: object
  handlers.TokenContract:
    properties:
      address:
        type: string
      alias:
        type: string
        x-nullable: true
      balance:
        type: integer
      delegate:
        type: string
        x-nullable: true
      delegate_alias:
        type: string
        x-nullable: true
      last_action:
        type: string
      level:
        type: integer
      manager:
        type: string
        x-nullable: true
      methods:
        additionalProperties:
          $ref: '#/definitions/handlers.TokenMethodStats'
        type: object
        x-nullable: true
      network:
        type: string
      timestamp:
        type: string
      tx_count:
        type: integer
      type:
        type: string
    type: object
  handlers.TokenMetadata:
    properties:
      contract:
        type: string
      decimals:
        type: integer
        x-nullable: true
      level:
        type: integer
        x-nullable: true
      name:
        type: string
        x-nullable: true
      network:
        type: string
      symbol:
        type: string
        x-nullable: true
      token_id:
        type: integer
      token_info:
        additionalProperties: true
        type: object
        x-nullable: true
      volume_24_hours:
        type: number
        x-nullable: true
    type: object
  handlers.TokenMethodStats:
    properties:
      average_consumed_gas:
        type: integer
      call_count:
        type: integer
    type: object
  handlers.Transfer:
    properties:
      alias:
        type: string
        x-nullable: true
      amount:
        type: string
      contract:
        type: string
      counter:
        type: integer
      from:
        type: string
      from_alias:
        type: string
        x-nullable: true
      hash:
        type: string
      indexed_time:
        type: integer
      initiator:
        type: string
      initiator_alias:
        type: string
        x-nullable: true
      level:
        type: integer
      network:
        type: string
      nonce:
        type: integer
        x-nullable: true
      parent:
        type: string
        x-nullable: true
      status:
        type: string
      timestamp:
        type: string
      to:
        type: string
      to_alias:
        type: string
        x-nullable: true
      token:
        $ref: '#/definitions/handlers.TokenMetadata'
        x-nullable: true
      token_id:
        type: integer
    type: object
  handlers.TransferResponse:
    properties:
      last_id:
        type: string
        x-nullable: true
      total:
        type: integer
      transfers:
        items:
          $ref: '#/definitions/handlers.Transfer'
        type: array
    type: object
  handlers.ViewSchema:
    properties:
      default_model:
        type: object
        x-nullable: true
      description:
        type: string
      implementation:
        type: integer
      name:
        type: string
      schema:
        $ref: '#/definitions/ast.JSONSchema'
      typedef:
        items:
          $ref: '#/definitions/ast.Typedef'
        type: array
    type: object
  handlers.executeViewRequest:
    properties:
      amount:
        type: integer
      data:
        additionalProperties: true
        type: object
      gas_limit:
        type: integer
      implementation:
        type: integer
      name:
        type: string
      sender:
        type: string
      source:
        type: string
    required:
    - data
    - implementation
    - name
    type: object
  handlers.getEntrypointDataRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      format:
        type: string
      name:
        type: string
    required:
    - data
    - name
    type: object
  handlers.runCodeRequest:
    properties:
      amount:
        type: integer
      data:
        additionalProperties: true
        type: object
      gas_limit:
        type: integer
      name:
        type: string
      sender:
        type: string
      source:
        type: string
    required:
    - data
    - name
    type: object
  models.Group:
    properties:
      count:
        type: integer
      top:
        items:
          $ref: '#/definitions/models.Top'
        type: array
    type: object
  models.Item:
    properties:
      body:
        type: object
      group:
        $ref: '#/definitions/models.Group'
      highlights:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      type:
        type: string
      value:
        type: string
    type: object
  models.Result:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      time:
        type: integer
    type: object
  models.Top:
    properties:
      key:
        type: string
      network:
        type: string
    type: object
  operation.DAppStats:
    properties:
      txs:
        type: integer
      users:
        type: integer
      volume:
        type: integer
    type: object
  tezerrors.Error:
    properties:
      descr:
        type: string
      id:
        type: string
      kind:
        type: string
      title:
        type: string
    type: object
  tezosdomain.ReverseTezosDomain:
    properties:
      expiration:
        type: string
      name:
        type: string
    type: object
  tezosdomain.TezosDomain:
    properties:
      address:
        type: string
      data:
        additionalProperties:
          type: string
        type: object
      expiration:
        type: string
      level:
        type: integer
      name:
        type: string
      network:
        type: string
      timestamp:
        type: string
    type: object
  tzip.Event:
    properties:
      description:
        type: string
      implementations:
        items:
          $ref: '#/definitions/tzip.EventImplementation'
        type: array
      name:
        type: string
    type: object
  tzip.EventImplementation:
    properties:
      michelsonExtendedStorageEvent:
        $ref: '#/definitions/tzip.MichelsonExtendedStorageEvent'
      michelsonInitialStorageEvent:
        $ref: '#/definitions/tzip.MichelsonInitialStorageEvent'
      michelsonParameterEvent:
        $ref: '#/definitions/tzip.MichelsonParameterEvent'
    type: object
  tzip.License:
    properties:
      details:
        type: string
      name:
        type: string
    type: object
  tzip.MichelsonExtendedStorageEvent:
    properties:
      code:
        items:
          type: integer
        type: array
      entrypoints:
        items:
          type: string
        type: array
      parameter:
        items:
          type: integer
        type: array
      returnType:
        items:
          type: integer
        type: array
    type: object
  tzip.MichelsonInitialStorageEvent:
    properties:
      code:
        items:
          type: integer
        type: array
      parameter:
        items:
          type: integer
        type: array
      returnType:
        items:
          type: integer
        type: array
    type: object
  tzip.MichelsonParameterEvent:
    properties:
      code:
        items:
          type: integer
        type: array
      entrypoints:
        items:
          type: string
        type: array
      parameter:
        items:
          type: integer
        type: array
      returnType:
        items:
          type: integer
        type: array
    type: object
  tzip.Sections:
    properties:
      code:
        items:
          type: integer
        type: array
      parameter:
        items:
          type: integer
        type: array
      returnType:
        items:
          type: integer
        type: array
    type: object
  tzip.View:
    properties:
      description:
        type: string
      implementations:
        items:
          $ref: '#/definitions/tzip.ViewImplementation'
        type: array
      name:
        type: string
    type: object
  tzip.ViewImplementation:
    properties:
      michelsonStorageView:
        $ref: '#/definitions/tzip.Sections'
    type: object
info:
  contact:
    email: hello@baking-bad.org
    name: Baking Bad Team
    url: https://baking-bad.org/docs
  description: This is API description for Better Call Dev service.
  title: Better Call Dev API
  x-logo:
    altText: Better Call Dev logo
    href: https://better-call.dev
    url: https://better-call.dev/img/logo_og.png
paths:
  /v1/{network}/{address}/transfers:
    get:
      consumes:
      - application/json
      description: Show contract`s tokens transfers.
      operationId: get-contract-transfers
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Transfers count
        in: query
        name: size
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Token ID
        in: query
        name: token_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TransferResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show contract`s tokens transfers
      tags:
      - contract
  /v1/account/{network}/{address}:
    get:
      consumes:
      - application/json
      description: Get account info
      operationId: get-account-info
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.AccountInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get account info
      tags:
      - account
  /v1/account/{network}/{address}/metadata:
    get:
      consumes:
      - application/json
      description: Returns full metadata for account
      operationId: get-account-tzip
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT or tz address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TZIPResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get metadata for account
      tags:
      - account
  /v1/bigmap/{network}/{ptr}:
    get:
      consumes:
      - application/json
      description: Get big map info by pointer
      operationId: get-bigmap
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetBigMapResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map info by pointer
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/count:
    get:
      consumes:
      - application/json
      description: Get big map diffs count info by pointer
      operationId: get-bigmapdiff-count
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map diffs count info by pointer
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/history:
    get:
      consumes:
      - application/json
      description: Get big map actions (alloc/copy/remove)
      operationId: get-bigmap-history
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BigMapHistoryResponse'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map actions (alloc/copy/remove)
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/keys:
    get:
      consumes:
      - application/json
      description: Get big map keys by pointer
      operationId: get-bigmap-keys
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      - description: Search string
        in: query
        name: q
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        name: size
        type: integer
      - description: Max level filter
        in: query
        minimum: 0
        name: max_level
        type: integer
      - description: Min level filter
        in: query
        minimum: 0
        name: min_level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.BigMapResponseItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map keys by pointer
      tags:
      - bigmap
  /v1/bigmap/{network}/{ptr}/keys/{key_hash}:
    get:
      consumes:
      - application/json
      description: Get big map diffs by pointer and key hash
      operationId: get-bigmap-keyhash
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Big map pointer
        in: path
        name: ptr
        required: true
        type: integer
      - description: Key hash in big map
        in: path
        maxLength: 54
        minLength: 54
        name: key_hash
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.BigMapDiffByKeyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get big map diffs by pointer and key hash
      tags:
      - bigmap
  /v1/contract/{network}/{address}:
    get:
      consumes:
      - application/json
      description: Get full contract info
      operationId: get-contract
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Contract'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract info
      tags:
      - contract
  /v1/contract/{network}/{address}/code:
    get:
      consumes:
      - application/json
      description: Get contract code
      operationId: get-contract-code
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Protocol
        in: query
        name: protocol
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract code
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints:
    get:
      consumes:
      - application/json
      description: Get contract entrypoints
      operationId: get-contract-entrypoints
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.EntrypointSchema'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract entrypoints
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints/data:
    post:
      consumes:
      - application/json
      description: Get entrypoint data from schema object
      operationId: get-contract-entrypoints-data
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.getEntrypointDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get entrypoint data from schema object
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints/schema:
    get:
      consumes:
      - application/json
      description: Get contract`s entrypoint schema
      operationId: get-contract-entrypoints-schema
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Entrypoint name
        in: query
        name: entrypoint
        required: true
        type: string
      - description: Fill storage type
        enum:
        - empty
        - latest
        in: query
        name: fill_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.EntrypointSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract`s entrypoint schema
      tags:
      - contract
  /v1/contract/{network}/{address}/entrypoints/trace:
    post:
      consumes:
      - application/json
      description: Execute entrypoint with passed arguments
      operationId: run-code
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.runCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Execute entrypoint with passed arguments
      tags:
      - contract
  /v1/contract/{network}/{address}/mempool:
    get:
      consumes:
      - application/json
      description: Get contract mempool operations
      operationId: get-contract-mempool
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract mempool operations
      tags:
      - contract
  /v1/contract/{network}/{address}/migrations:
    get:
      consumes:
      - application/json
      description: Get contract migrations
      operationId: get-contract-migrations
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Migration'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract migrations
      tags:
      - contract
  /v1/contract/{network}/{address}/operations:
    get:
      consumes:
      - application/json
      description: Get contract operations
      operationId: get-contract-operations
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Last operation ID
        in: query
        name: last_id
        type: string
      - description: Timestamp
        in: query
        name: from
        type: integer
      - description: Timestamp
        in: query
        name: to
        type: integer
      - description: Expected OPG count
        in: query
        name: size
        type: integer
      - description: Comma-separated operations statuses
        in: query
        name: status
        type: string
      - description: Comma-separated called entrypoints list
        in: query
        name: entrypoints
        type: string
      - description: Include storage diff to operations or not
        in: query
        name: with_storage_diff
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.OperationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract operations
      tags:
      - contract
  /v1/contract/{network}/{address}/same:
    get:
      consumes:
      - application/json
      description: Get same contracts
      operationId: get-contract-same
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Manager
        in: query
        name: manager
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SameContractsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get same contracts
      tags:
      - contract
  /v1/contract/{network}/{address}/similar:
    get:
      consumes:
      - application/json
      description: Get similar contracts
      operationId: get-contract-similar
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SimilarContractsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get similar contracts
      tags:
      - contract
  /v1/contract/{network}/{address}/storage:
    get:
      consumes:
      - application/json
      description: Get contract storage
      operationId: get-contract-storage
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ast.MiguelNode'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract storage
      tags:
      - contract
  /v1/contract/{network}/{address}/storage/raw:
    get:
      consumes:
      - application/json
      description: Get contract raw storage
      operationId: get-contract-storage-raw
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract raw storage
      tags:
      - contract
  /v1/contract/{network}/{address}/storage/rich:
    get:
      consumes:
      - application/json
      description: Get contract rich storage
      operationId: get-contract-storage-rich
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Level
        in: query
        name: level
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract rich storage
      tags:
      - contract
  /v1/contract/{network}/{address}/storage/schema:
    get:
      consumes:
      - application/json
      description: Get contract storage schema
      operationId: get-contract-storage-schema
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Fill storage type
        enum:
        - empty
        - current
        in: query
        name: fill_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.EntrypointSchema'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract storage schema
      tags:
      - contract
  /v1/contract/{network}/{address}/tokens:
    get:
      consumes:
      - application/json
      description: List contract tokens
      operationId: get-contract-token
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Token'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: List contract tokens
      tags:
      - contract
  /v1/contract/{network}/{address}/tokens/holders:
    get:
      consumes:
      - application/json
      description: List token holders
      operationId: get-token-holders
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Token ID
        in: query
        minimum: 0
        name: token_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/gin.H'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: List token holders
      tags:
      - contract
  /v1/contract/{network}/{address}/views/execute:
    post:
      consumes:
      - application/json
      description: Execute view of contracts metadata
      operationId: contract-execute-view
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.executeViewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ast.MiguelNode'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Execute view of contracts metadata
      tags:
      - contract
  /v1/contract/{network}/{address}/views/schema:
    get:
      consumes:
      - application/json
      description: Get view schemas of contract metadata
      operationId: get-contract-tzip-views-schema
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.ViewSchema'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get view schemas of contract metadata
      tags:
      - contract
  /v1/diff:
    post:
      consumes:
      - application/json
      description: Get diff between two contracts
      operationId: get-diff
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.CodeDiffRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CodeDiffResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get diff between two contracts
      tags:
      - contract
  /v1/domains/{network}:
    get:
      consumes:
      - application/json
      description: Show all tezos domains for network
      operationId: list-domains
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Transfers count
        in: query
        name: size
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.DomainsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show all tezos domains for network
      tags:
      - domains
  /v1/domains/{network}/resolve:
    get:
      consumes:
      - application/json
      description: Resolve domain by address and vice versa
      operationId: resolve-domain
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Domain name
        in: query
        name: name
        type: string
      - description: Address
        in: query
        maxLength: 36
        minLength: 36
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tezosdomain.TezosDomain'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Resolve domain
      tags:
      - domains
  /v1/operation/{id}/error_location:
    get:
      consumes:
      - application/json
      operationId: get-operation-error-location
      parameters:
      - description: Internal BCD operation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetErrorLocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get code line where operation failed
      tags:
      - operations
  /v1/opg/{hash}:
    get:
      consumes:
      - application/json
      description: Get operation group by hash
      operationId: get-opg
      parameters:
      - description: Operation group hash
        in: path
        maxLength: 51
        minLength: 51
        name: hash
        required: true
        type: string
      - description: Search operation in mempool or not
        in: query
        name: with_mempool
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Operation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get operation group
      tags:
      - operations
  /v1/pick_random:
    get:
      consumes:
      - application/json
      description: Get random contract with 2 or more operations
      operationId: get-random-contract
      parameters:
      - description: Network
        in: query
        name: network
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Contract'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show random contract
      tags:
      - contract
  /v1/search:
    get:
      consumes:
      - application/json
      description: Search any data in contracts, operations and big map diff with
        filters
      operationId: search
      parameters:
      - description: Query string
        in: query
        name: q
        required: true
        type: string
      - description: Comma-separated field names among which will search
        in: query
        name: f
        type: string
      - description: Comma-separated networks list for searching
        in: query
        name: "n"
        type: string
      - description: Offset for pagination
        in: query
        name: o
        type: integer
      - description: Return search result since given timestamp
        in: query
        name: s
        type: integer
      - description: Return search result before given timestamp
        in: query
        name: e
        type: integer
      - description: Grouping by contracts similarity. 0 - false, any others - true
        enum:
        - 0
        - 1
        in: query
        name: g
        type: integer
      - description: 'Comma-separated list of indices for searching. Values: contract,
          operation, bigmapdiff'
        in: query
        name: i
        type: string
      - description: 'Comma-separated list of languages for searching. Values: smartpy,
          liquidity, ligo, lorentz, michelson'
        in: query
        name: l
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Result'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Search in better-call
      tags:
      - search
  /v1/slug/{slug}:
    get:
      consumes:
      - application/json
      description: Get contract by slug
      operationId: get-contract-by-slug
      parameters:
      - description: Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Alias'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get contract by slug
      tags:
      - contract
  /v1/stats:
    get:
      consumes:
      - application/json
      description: get indexer states for all networks
      operationId: get-stats
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.Block'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show indexer stats
      tags:
      - statistics
  /v1/stats/{network}:
    get:
      consumes:
      - application/json
      description: Get detailed statistics for network
      operationId: get-network-stats
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.NetworkStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Network statistics
      tags:
      - statistics
  /v1/stats/{network}/contracts:
    get:
      consumes:
      - application/json
      description: Show total volume, unique users and transactions count for period
      operationId: get-stats-contracts
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Comma-separated KT addresses
        in: query
        minLength: 36
        name: contracts
        required: true
        type: string
      - description: One of periods
        enum:
        - all
        - year
        - month
        - week
        - day
        in: query
        name: period
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/operation.DAppStats'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Show contracts stats
      tags:
      - contract
  /v1/stats/{network}/series:
    get:
      consumes:
      - application/json
      description: Get count series data for network
      operationId: get-network-series
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: One of names
        enum:
        - contract
        - operation
        - paid_storage_size_diff
        - consumed_gas
        - users
        - volume
        in: query
        name: name
        required: true
        type: string
      - description: One of periods
        enum:
        - year
        - month
        - week
        - day
        in: query
        name: period
        required: true
        type: string
      - description: Comma-separated contract addresses
        in: query
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                type: integer
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get network series
      tags:
      - statistics
  /v1/tokens/{network}:
    get:
      consumes:
      - application/json
      description: Get all contracts that implement FA1/FA1.2 standard
      operationId: get-fa-all
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        maximum: 100
        minimum: 0
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.PageableTokenContracts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get all contracts that implement FA1/FA1.2 standard
      tags:
      - tokens
  /v1/tokens/{network}/series:
    get:
      consumes:
      - application/json
      description: Get volume series for token
      operationId: get-token-series
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: One of periods
        enum:
        - year
        - month
        - week
        - day
        in: query
        name: period
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: contract
        required: true
        type: string
      - description: Token ID
        in: query
        minimum: 0
        name: token_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                type: number
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get volume series for token
      tags:
      - tokens
  /v1/tokens/{network}/transfers/{address}:
    get:
      consumes:
      - application/json
      description: Get all token transfers (FA1/FA1.2) where given address is src/dst
      operationId: get-token-transfers
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: KT address
        in: path
        maxLength: 36
        minLength: 36
        name: address
        required: true
        type: string
      - description: Last transfer ID
        in: query
        name: last_id
        type: string
      - description: Requested count
        in: query
        maximum: 100
        name: size
        type: integer
      - description: 'Sort: one of `asc` and `desc`'
        in: query
        name: sort
        type: string
      - description: Timestamp in seconds
        in: query
        name: start
        type: integer
      - description: Timestamp in seconds
        in: query
        name: end
        type: integer
      - description: Comma-separated list of contracts which tokens will be requested
        in: query
        name: contracts
        type: string
      - description: Token ID
        in: query
        name: token_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TransferResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get all token transfers (FA1/FA1.2) where given address is src/dst
      tags:
      - tokens
  /v1/tokens/{network}/version/{faversion}:
    get:
      consumes:
      - application/json
      description: Get all contracts that implement FA1/FA1.2 standard by version
      operationId: get-fa-version
      parameters:
      - description: Network
        in: path
        name: network
        required: true
        type: string
      - description: FA token version
        enum:
        - fa1
        - fa12
        - fa2
        in: path
        name: faversion
        required: true
        type: string
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Requested count
        in: query
        maximum: 100
        minimum: 0
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.PageableTokenContracts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Get all contracts that implement FA1/FA1.2 standard by version
      tags:
      - tokens
swagger: "2.0"
