parameter (or :_entries (string %_Liq_entry_remove_candidate) (or (string %_Liq_entry_add_candidate) (or (unit %_Liq_entry_close_election) (string %_Liq_entry_main))));
storage (pair :storage (map %candidates string int) (pair (map %voters address bool) (bool %voting_ended)));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT { RENAME @candidate_slash_3 ;
                 { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                 PUSH nat 0 ;
                 { DIP { DUP @storage } ; SWAP } ;
                 { CDR ; CAR %voters } ;
                 SIZE ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "Voting has already begun" ;
                      FAILWITH }
                    { UNIT } ;
                 DROP ;
                 PUSH bool True ;
                 { DIP { DUP @storage } ; SWAP } ;
                 { CDR ; CDR %voting_ended } ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "Voting has already ended" ;
                      FAILWITH }
                    { UNIT } ;
                 DROP ;
                 DUP @storage ;
                 CDR ;
                 { DIP { DUP @storage } ; SWAP } ;
                 CAR %candidates ;
                 { DIP { DIP { DIP { DUP @candidate } ; SWAP } ; SWAP } ; SWAP } ;
                 GET ;
                 IF_NONE { { DIP { DUP @storage } ; SWAP } ;
                           CAR %candidates ;
                           { DIP { DIP { DIP { DUP @candidate } ; SWAP } ; SWAP } ; SWAP } ;
                           DIP { NONE int } ;
                           UPDATE }
                         { DUP @x ;
                           PUSH string "Candidate already present" ;
                           PAIR ;
                           FAILWITH } ;
                 { DIP { DIP { DROP ; DROP } } } ;
                 PAIR @storage %candidates ;
                 NIL operation ;
                 PAIR }
               { IF_LEFT { RENAME @candidate_slash_7 ;
                           { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                           PUSH nat 0 ;
                           { DIP { DUP @storage } ; SWAP } ;
                           { CDR ; CAR %voters } ;
                           SIZE ;
                           COMPARE ;
                           GT ;
                           IF { PUSH string "Voting has already begun" ;
                                FAILWITH }
                              { UNIT } ;
                           DROP ;
                           PUSH bool True ;
                           { DIP { DUP @storage } ; SWAP } ;
                           { CDR ; CDR %voting_ended } ;
                           COMPARE ;
                           EQ ;
                           IF { PUSH string "Voting has already ended" ;
                                FAILWITH }
                              { UNIT } ;
                           DROP ;
                           DUP @storage ;
                           CDR ;
                           { DIP { DUP @storage } ; SWAP } ;
                           CAR %candidates ;
                           { DIP { DIP { DIP { DUP @candidate } ; SWAP } ; SWAP } ; SWAP } ;
                           GET ;
                           IF_NONE { { DIP { DUP @storage } ; SWAP } ;
                                     CAR %candidates ;
                                     PUSH int 0 ;
                                     { DIP { DIP { DIP { DIP { DUP @candidate } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                                     DIP { SOME } ;
                                     UPDATE }
                                   { DUP @x ;
                                     PUSH string "Candidate already present" ;
                                     PAIR ;
                                     FAILWITH } ;
                           { DIP { DIP { DROP ; DROP } } } ;
                           PAIR @storage %candidates ;
                           NIL operation ;
                           PAIR }
                         { IF_LEFT { DROP ;
                                     { DIP { DUP } ; SWAP } ;
                                     DUP ;
                                     CAR %candidates ;
                                     SWAP ;
                                     CDR ;
                                     CAR %voters ;
                                     PUSH bool True ;
                                     SWAP ;
                                     PAIR %voters %voting_ended ;
                                     SWAP ;
                                     PAIR @storage %candidates ;
                                     NIL operation ;
                                     PAIR }
                                   { RENAME @parameter_slash_14 ;
                                     { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                                     PUSH bool True ;
                                     { DIP { DUP @storage } ; SWAP } ;
                                     { CDR ; CDR %voting_ended } ;
                                     COMPARE ;
                                     EQ ;
                                     IF { PUSH string "Voting has already ended" ;
                                          FAILWITH }
                                        { UNIT } ;
                                     DROP ;
                                     DUP @storage ;
                                     CDR ;
                                     { DIP { DUP @storage } ; SWAP } ;
                                     CAR %candidates ;
                                     { DIP { DIP { DIP { DUP @parameter } ; SWAP } ; SWAP } ; SWAP } ;
                                     GET ;
                                     IF_NONE { { DIP { DIP { DUP @parameter } ; SWAP } ; SWAP } ;
                                               PUSH string "Candidate is not valid" ;
                                               PAIR ;
                                               FAILWITH }
                                             { { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                                               CAR %candidates ;
                                               PUSH int 1 ;
                                               { DIP { DIP { DUP @x } ; SWAP } ; SWAP } ;
                                               ADD ;
                                               { DIP { DIP { DIP { DIP { DIP { DUP @parameter } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ; SWAP } ;
                                               DIP { SOME } ;
                                               { DIP { DIP { DIP { DROP } } } } ;
                                               UPDATE } ;
                                     { DIP { DIP { DROP ; DROP } } } ;
                                     PAIR @storage %candidates ;
                                     NIL operation ;
                                     PAIR } } } ;
       DIP { DROP ; DROP } }