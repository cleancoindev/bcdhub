parameter (list (pair string (pair string string)));
storage (pair :storage (map %certified string (pair string string)) (address %owner));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @cert_list_slash_2 ;
       { DIP { DUP @storage } ; SWAP } ;
       CDR %owner ;
       SOURCE @addr ;
       COMPARE ;
       NEQ ;
       IF { PUSH string "Not allowed" ;
            FAILWITH }
          { UNIT } ;
       DROP ;
       { DIP { DUP @storage } ; SWAP } ;
       CDR %owner ;
       { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
       CAR %certified ;
       { DIP { { DIP { DUP @cert_list } ; SWAP } } ; SWAP } ;
       ITER { RENAME @_elt_map_slash_4 ; DIP { DUP } ; PAIR ; DUP ; CAR @elt ; { DIP { DUP } ; SWAP } ; CDR @map ; { DIP { DUP @elt } ; SWAP } ; { CDR ; CDR } ; { DIP { { DIP { DUP @elt } ; SWAP } } ; SWAP } ; { CDR ; CAR } ; PAIR ; { DIP { { DIP { DUP @elt } ; SWAP } } ; SWAP } ; CAR ; DIP { SOME } ; DIP { DIP { DIP { DROP ; DROP ; DROP } } } ; UPDATE } ;
       DIP { DIP { DROP ; DROP } } ;
       PAIR @storage %certified %owner ;
       NIL operation ;
       PAIR }