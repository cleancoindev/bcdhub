parameter (pair bytes (pair bytes nat));
storage (pair (address :oracle_pkh) (contract :provider (or (or (pair bytes (pair bytes nat)) (or (bytes :trigger) (or (pair :withdraw signature (pair mutez key)) (pair :init signature (contract (pair bytes (pair bytes nat))))))) (pair signature (pair timestamp (pair bytes (pair (pair :terms mutez mutez) (pair :params (pair :location int int) timestamp))))))));
code { DUP ;
       { CDR ; CAR } ;
       SENDER ;
       { COMPARE ; EQ ; IF {} { PUSH string "sender is not oracle" ; FAILWITH } } ;
       DUP ;
       { CDR ; CDR } ;
       PUSH mutez 0 ;
       { DIP { DIP { DUP } ; SWAP } ; SWAP } ;
       CAR ;
       LEFT (or (bytes :trigger) (or (pair :withdraw signature (pair mutez key)) (pair :init signature (contract (pair bytes (pair bytes nat)))))) ;
       LEFT (pair signature (pair timestamp (pair bytes (pair (pair :terms mutez mutez) (pair :params (pair :location int int) timestamp))))) ;
       { DIP { DIP { DIP { CDR } } } } ;
       TRANSFER_TOKENS ;
       NIL operation ;
       SWAP ;
       CONS ;
       PAIR }