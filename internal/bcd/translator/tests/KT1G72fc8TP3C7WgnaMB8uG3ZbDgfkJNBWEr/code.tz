parameter (or :_entries (pair :order %demand (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (or (pair :order %offer (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair :report %finalize (nat %report_ix) (bytes %report_data))));
storage (pair :storage (map %asks bytes (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address)) (pair (map %bids bytes (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address)) (map %deals nat (pair :liability (pair :order %liability_params (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair (address %liability_promisee) (pair (address %liability_promisor) (option %liability_report bytes)))))));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       LAMBDA @hash_order (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) bytes { RENAME @o_slash_3 ; NIL bytes ; SWAP ; CAR %order_model ; BLAKE2B ; CONS ; CONCAT ; BLAKE2B } ;
       LAMBDA @new_liability (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair address address)) (pair :liability (pair :order %liability_params (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair (address %liability_promisee) (pair (address %liability_promisor) (option %liability_report bytes)))) { RENAME @order_promisee_promisor_slash_5 ; NONE bytes ; { DIP { DUP @order_promisee_promisor } ; SWAP } ; { CDR ; CDR @promisor } ; PAIR %liability_promisor %liability_report ; { DIP { DUP @order_promisee_promisor } ; SWAP } ; { CDR ; CAR @promisee } ; PAIR %liability_promisee ; SWAP ; CAR @order ; PAIR %liability_params } ;
       { DIP { { DIP { DUP @parameter } ; SWAP } } ; SWAP } ;
       IF_LEFT { RENAME @order_slash_10 ;
                 { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                 { DIP { { DIP { { DIP { DUP @hash_order } ; SWAP } } ; SWAP } } ; SWAP } ;
                 { DIP { { DIP { DUP @order } ; SWAP } } ; SWAP } ;
                 EXEC @demand_hash ;
                 { DIP { DUP @storage } ; SWAP } ;
                 { CDR ; CAR %bids } ;
                 { DIP { DUP @demand_hash } ; SWAP } ;
                 GET ;
                 IF_NONE { { DIP { DUP @storage } ; SWAP } ;
                           CDR ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           CAR %asks ;
                           SENDER ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { DUP @order } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           PAIR ;
                           { DIP { { DIP { { DIP { DUP @demand_hash } ; SWAP } } ; SWAP } } ; SWAP } ;
                           DIP { SOME } ;
                           UPDATE ;
                           PAIR %asks ;
                           NIL operation ;
                           PAIR }
                         { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           DUP ;
                           CAR %asks ;
                           SWAP ;
                           CDR ;
                           CAR %bids ;
                           { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           { CDR ; CDR %deals } ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @new_liability } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           CDR @promisor ;
                           SENDER ;
                           PAIR ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @order } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           PAIR ;
                           EXEC @liability ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           { CDR ; CDR %deals } ;
                           SIZE ;
                           DIP { SOME } ;
                           UPDATE ;
                           SWAP ;
                           PAIR %bids %deals ;
                           SWAP ;
                           PAIR @storage %asks ;
                           DUP @storage ;
                           DUP ;
                           CAR %asks ;
                           SWAP ;
                           CDR ;
                           CDR %deals ;
                           { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                           { CDR ; CAR %bids } ;
                           { DIP { { DIP { { DIP { { DIP { { DIP { DUP @demand_hash } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           DIP { NONE (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address) } ;
                           DIP { DIP { DIP { DIP { DIP { DROP ; DROP } } } } } ;
                           UPDATE ;
                           PAIR %bids %deals ;
                           SWAP ;
                           PAIR @storage %asks ;
                           NIL operation ;
                           PAIR } ;
                 DIP { DROP ; DROP ; DROP } }
               { IF_LEFT { RENAME @order_slash_19 ;
                           { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           { DIP { { DIP { { DIP { DUP @hash_order } ; SWAP } } ; SWAP } } ; SWAP } ;
                           { DIP { { DIP { DUP @order } ; SWAP } } ; SWAP } ;
                           EXEC @offer_hash ;
                           { DIP { DUP @storage } ; SWAP } ;
                           CAR %asks ;
                           { DIP { DUP @offer_hash } ; SWAP } ;
                           GET ;
                           IF_NONE { { DIP { DUP @storage } ; SWAP } ;
                                     DUP ;
                                     CAR %asks ;
                                     SWAP ;
                                     CDR ;
                                     CDR %deals ;
                                     { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CAR %bids } ;
                                     SENDER ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @order } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     PAIR ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @offer_hash } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     DIP { SOME } ;
                                     UPDATE ;
                                     PAIR %bids %deals ;
                                     SWAP ;
                                     PAIR %asks ;
                                     NIL operation ;
                                     PAIR }
                                   { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                     DUP ;
                                     CAR %asks ;
                                     SWAP ;
                                     CDR ;
                                     CAR %bids ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CDR %deals } ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @new_liability } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { DIP { { DIP { { DIP { { DIP { DUP } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     CDR @promisee ;
                                     SENDER ;
                                     PAIR ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @order } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     PAIR ;
                                     EXEC @liability ;
                                     { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     { CDR ; CDR %deals } ;
                                     SIZE ;
                                     DIP { SOME } ;
                                     UPDATE ;
                                     SWAP ;
                                     PAIR %bids %deals ;
                                     SWAP ;
                                     PAIR @storage %asks ;
                                     DUP @storage ;
                                     CDR ;
                                     { DIP { DUP @storage } ; SWAP } ;
                                     CAR %asks ;
                                     { DIP { { DIP { { DIP { { DIP { DUP @offer_hash } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                     DIP { NONE (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address) } ;
                                     DIP { DIP { DIP { DIP { DROP ; DROP } } } } ;
                                     UPDATE ;
                                     PAIR @storage %asks ;
                                     NIL operation ;
                                     PAIR } ;
                           DIP { DROP ; DROP ; DROP } }
                         { RENAME @report_slash_28 ;
                           { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                           DUP @storage ;
                           { CDR ; CDR %deals } ;
                           { DIP { { DIP { DUP @report } ; SWAP } } ; SWAP } ;
                           CAR %report_ix ;
                           GET ;
                           IF_NONE { PUSH string "Wrong liability index" ;
                                     FAILWITH }
                                   { DUP @l ;
                                     { CDR ; CDR ; CDR %liability_report } ;
                                     IF_NONE { PUSH string "Liability already finalized" ;
                                               FAILWITH }
                                             { SENDER ;
                                               { DIP { { DIP { DUP @l } ; SWAP } } ; SWAP } ;
                                               { CDR ; CDR ; CAR %liability_promisor } ;
                                               COMPARE ;
                                               NEQ ;
                                               IF { PUSH string "Wrong report sender" ;
                                                    FAILWITH }
                                                  { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } ;
                                                    DUP ;
                                                    CAR %asks ;
                                                    SWAP ;
                                                    CDR ;
                                                    CAR %bids ;
                                                    { DIP { { DIP { { DIP { { DIP { DUP @storage } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                                    { CDR ; CDR %deals } ;
                                                    { DIP { { DIP { { DIP { { DIP { DUP @l } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                                    DUP ;
                                                    CAR %liability_params ;
                                                    SWAP ;
                                                    CDR ;
                                                    DUP ;
                                                    CAR %liability_promisee ;
                                                    SWAP ;
                                                    CDR ;
                                                    CAR %liability_promisor ;
                                                    { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @report } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                                    CDR %report_data ;
                                                    SOME ;
                                                    SWAP ;
                                                    PAIR %liability_promisor %liability_report ;
                                                    SWAP ;
                                                    PAIR %liability_promisee ;
                                                    SWAP ;
                                                    PAIR @l %liability_params ;
                                                    SOME ;
                                                    { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { { DIP { DUP @report } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } } ; SWAP } ;
                                                    CAR %report_ix ;
                                                    UPDATE ;
                                                    SWAP ;
                                                    PAIR %bids %deals ;
                                                    SWAP ;
                                                    PAIR %asks ;
                                                    NIL operation ;
                                                    PAIR } ;
                                               DIP { DROP } } ;
                                     DIP { DROP } } ;
                           DIP { DROP ; DROP } } } ;
       DIP { DROP ; DROP ; DROP ; DROP } }